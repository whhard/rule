<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daokoujinke.mapper.TResultCountBaseMapper">
  <resultMap id="BaseResultMap" type="com.daokoujinke.entity.TResultCountBase">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="person_name" jdbcType="VARCHAR" property="personName" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="totalCount" jdbcType="INTEGER" property="totalcount" />
    <result column="pass" jdbcType="INTEGER" property="pass" />
    <result column="bad" jdbcType="INTEGER" property="bad" />
    <result column="risk" jdbcType="INTEGER" property="risk" />
    <result column="audit" jdbcType="INTEGER" property="audit" />
    <result column="refuse" jdbcType="INTEGER" property="refuse" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, company_name, person_name, id_number, phone, totalCount, pass, bad, risk, audit, 
    refuse, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.daokoujinke.entity.TResultCountBaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_result_count_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_result_count_base
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_result_count_base
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.daokoujinke.entity.TResultCountBase">
    insert into t_result_count_base (id, company_name, person_name, 
      id_number, phone, totalCount, 
      pass, bad, risk, audit, 
      refuse, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{personName,jdbcType=VARCHAR}, 
      #{idNumber,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{totalcount,jdbcType=INTEGER}, 
      #{pass,jdbcType=INTEGER}, #{bad,jdbcType=INTEGER}, #{risk,jdbcType=INTEGER}, #{audit,jdbcType=INTEGER}, 
      #{refuse,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daokoujinke.entity.TResultCountBase">
    insert into t_result_count_base
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="personName != null">
        person_name,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="totalcount != null">
        totalCount,
      </if>
      <if test="pass != null">
        pass,
      </if>
      <if test="bad != null">
        bad,
      </if>
      <if test="risk != null">
        risk,
      </if>
      <if test="audit != null">
        audit,
      </if>
      <if test="refuse != null">
        refuse,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="personName != null">
        #{personName,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="totalcount != null">
        #{totalcount,jdbcType=INTEGER},
      </if>
      <if test="pass != null">
        #{pass,jdbcType=INTEGER},
      </if>
      <if test="bad != null">
        #{bad,jdbcType=INTEGER},
      </if>
      <if test="risk != null">
        #{risk,jdbcType=INTEGER},
      </if>
      <if test="audit != null">
        #{audit,jdbcType=INTEGER},
      </if>
      <if test="refuse != null">
        #{refuse,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.daokoujinke.entity.TResultCountBaseExample" resultType="java.lang.Long">
    select count(*) from t_result_count_base
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_result_count_base
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.personName != null">
        person_name = #{record.personName,jdbcType=VARCHAR},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.totalcount != null">
        totalCount = #{record.totalcount,jdbcType=INTEGER},
      </if>
      <if test="record.pass != null">
        pass = #{record.pass,jdbcType=INTEGER},
      </if>
      <if test="record.bad != null">
        bad = #{record.bad,jdbcType=INTEGER},
      </if>
      <if test="record.risk != null">
        risk = #{record.risk,jdbcType=INTEGER},
      </if>
      <if test="record.audit != null">
        audit = #{record.audit,jdbcType=INTEGER},
      </if>
      <if test="record.refuse != null">
        refuse = #{record.refuse,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_result_count_base
    set id = #{record.id,jdbcType=INTEGER},
      company_name = #{record.companyName,jdbcType=VARCHAR},
      person_name = #{record.personName,jdbcType=VARCHAR},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      totalCount = #{record.totalcount,jdbcType=INTEGER},
      pass = #{record.pass,jdbcType=INTEGER},
      bad = #{record.bad,jdbcType=INTEGER},
      risk = #{record.risk,jdbcType=INTEGER},
      audit = #{record.audit,jdbcType=INTEGER},
      refuse = #{record.refuse,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.daokoujinke.entity.TResultCountBase">
    update t_result_count_base
    <set>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="personName != null">
        person_name = #{personName,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="totalcount != null">
        totalCount = #{totalcount,jdbcType=INTEGER},
      </if>
      <if test="pass != null">
        pass = #{pass,jdbcType=INTEGER},
      </if>
      <if test="bad != null">
        bad = #{bad,jdbcType=INTEGER},
      </if>
      <if test="risk != null">
        risk = #{risk,jdbcType=INTEGER},
      </if>
      <if test="audit != null">
        audit = #{audit,jdbcType=INTEGER},
      </if>
      <if test="refuse != null">
        refuse = #{refuse,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daokoujinke.entity.TResultCountBase">
    update t_result_count_base
    set company_name = #{companyName,jdbcType=VARCHAR},
      person_name = #{personName,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      totalCount = #{totalcount,jdbcType=INTEGER},
      pass = #{pass,jdbcType=INTEGER},
      bad = #{bad,jdbcType=INTEGER},
      risk = #{risk,jdbcType=INTEGER},
      audit = #{audit,jdbcType=INTEGER},
      refuse = #{refuse,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>