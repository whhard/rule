<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daokoujinke.mapper.CPersonalInfoMapper">
  <resultMap id="BaseResultMap" type="com.daokoujinke.entity.CPersonalInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idcode" jdbcType="VARCHAR" property="idcode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="indate" jdbcType="VARCHAR" property="indate" />
    <result column="bank_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="edu" jdbcType="VARCHAR" property="edu" />
    <result column="home_address" jdbcType="VARCHAR" property="homeAddress" />
    <result column="detail_address" jdbcType="VARCHAR" property="detailAddress" />
    <result column="dk_id" jdbcType="VARCHAR" property="dkId" />
    <result column="idcard_front_url" jdbcType="VARCHAR" property="idcardFrontUrl" />
    <result column="idcard_back_url" jdbcType="VARCHAR" property="idcardBackUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, idcode, address, indate, bank_card, edu, home_address, detail_address, 
    dk_id, idcard_front_url, idcard_back_url, create_time
  </sql>
  <select id="selectByExample" parameterType="com.daokoujinke.entity.CPersonalInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from c_personal_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from c_personal_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from c_personal_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.daokoujinke.entity.CPersonalInfo">
    insert into c_personal_info (id, name, idcode, 
      address, indate, bank_card, 
      edu, home_address, detail_address, 
      dk_id, idcard_front_url, idcard_back_url, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{idcode,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{indate,jdbcType=VARCHAR}, #{bankCard,jdbcType=VARCHAR}, 
      #{edu,jdbcType=VARCHAR}, #{homeAddress,jdbcType=VARCHAR}, #{detailAddress,jdbcType=VARCHAR}, 
      #{dkId,jdbcType=VARCHAR}, #{idcardFrontUrl,jdbcType=VARCHAR}, #{idcardBackUrl,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.daokoujinke.entity.CPersonalInfo">
    insert into c_personal_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idcode != null">
        idcode,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="indate != null">
        indate,
      </if>
      <if test="bankCard != null">
        bank_card,
      </if>
      <if test="edu != null">
        edu,
      </if>
      <if test="homeAddress != null">
        home_address,
      </if>
      <if test="detailAddress != null">
        detail_address,
      </if>
      <if test="dkId != null">
        dk_id,
      </if>
      <if test="idcardFrontUrl != null">
        idcard_front_url,
      </if>
      <if test="idcardBackUrl != null">
        idcard_back_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcode != null">
        #{idcode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="indate != null">
        #{indate,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="edu != null">
        #{edu,jdbcType=VARCHAR},
      </if>
      <if test="homeAddress != null">
        #{homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null">
        #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="dkId != null">
        #{dkId,jdbcType=VARCHAR},
      </if>
      <if test="idcardFrontUrl != null">
        #{idcardFrontUrl,jdbcType=VARCHAR},
      </if>
      <if test="idcardBackUrl != null">
        #{idcardBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.daokoujinke.entity.CPersonalInfoExample" resultType="java.lang.Long">
    select count(*) from c_personal_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update c_personal_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idcode != null">
        idcode = #{record.idcode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.indate != null">
        indate = #{record.indate,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCard != null">
        bank_card = #{record.bankCard,jdbcType=VARCHAR},
      </if>
      <if test="record.edu != null">
        edu = #{record.edu,jdbcType=VARCHAR},
      </if>
      <if test="record.homeAddress != null">
        home_address = #{record.homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.detailAddress != null">
        detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.dkId != null">
        dk_id = #{record.dkId,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardFrontUrl != null">
        idcard_front_url = #{record.idcardFrontUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardBackUrl != null">
        idcard_back_url = #{record.idcardBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update c_personal_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      idcode = #{record.idcode,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      indate = #{record.indate,jdbcType=VARCHAR},
      bank_card = #{record.bankCard,jdbcType=VARCHAR},
      edu = #{record.edu,jdbcType=VARCHAR},
      home_address = #{record.homeAddress,jdbcType=VARCHAR},
      detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      dk_id = #{record.dkId,jdbcType=VARCHAR},
      idcard_front_url = #{record.idcardFrontUrl,jdbcType=VARCHAR},
      idcard_back_url = #{record.idcardBackUrl,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.daokoujinke.entity.CPersonalInfo">
    update c_personal_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcode != null">
        idcode = #{idcode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="indate != null">
        indate = #{indate,jdbcType=VARCHAR},
      </if>
      <if test="bankCard != null">
        bank_card = #{bankCard,jdbcType=VARCHAR},
      </if>
      <if test="edu != null">
        edu = #{edu,jdbcType=VARCHAR},
      </if>
      <if test="homeAddress != null">
        home_address = #{homeAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null">
        detail_address = #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="dkId != null">
        dk_id = #{dkId,jdbcType=VARCHAR},
      </if>
      <if test="idcardFrontUrl != null">
        idcard_front_url = #{idcardFrontUrl,jdbcType=VARCHAR},
      </if>
      <if test="idcardBackUrl != null">
        idcard_back_url = #{idcardBackUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daokoujinke.entity.CPersonalInfo">
    update c_personal_info
    set name = #{name,jdbcType=VARCHAR},
      idcode = #{idcode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      indate = #{indate,jdbcType=VARCHAR},
      bank_card = #{bankCard,jdbcType=VARCHAR},
      edu = #{edu,jdbcType=VARCHAR},
      home_address = #{homeAddress,jdbcType=VARCHAR},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
      dk_id = #{dkId,jdbcType=VARCHAR},
      idcard_front_url = #{idcardFrontUrl,jdbcType=VARCHAR},
      idcard_back_url = #{idcardBackUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>